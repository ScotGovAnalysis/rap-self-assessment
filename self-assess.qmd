---
title: "Scottish Government RAP Self Assessment"
format:
  html:
    page-layout: custom
    css: styles.css
    embed-resources: true
server: shiny
---

This tool provides a way for statisticians in the Scottish Government to self-assess their progress in developing [Reproducible Analytical Pipelines](https://analysisfunction.civilservice.gov.uk/support/reproducible-analytical-pipelines/).
    
```{r setup, include = FALSE}
#| context: setup

library(shiny)
library(dplyr)
library(here)
library(readr)
library(purrr)
library(tibble)

walk(list.files("modules", ".R$", full.names = TRUE), source)

criteria <- read_csv(here("criteria.csv"), show_col_types = FALSE)

options <- c(`Complete` = "yes", 
             `In progress` = "progress", 
             `Not started` = "no",
             `Not assessed` = "not_assessed")

levels <- c(`Aspiring` = 0,
            `Fundamental` = 1,
            `Intermediate` = 2,
            `Advanced` = 3)
```

::: {.panel-sidebar}
```{r sidebar-ui}
sidebarPanel(
   metadata_ui("metadata"),
   br(),
   download_report_ui("report"),
   br(),
   br(),
   download_csv_ui("csv")
)
```
:::

::: {.panel-center}

```{r}
form_ui("id1", "Criteria 1", options)
form_ui("id2", "Criteria 2", options)

textOutput("test")
```

:::

```{r server}
#| context: server

form_response <- list(
   callModule(form_server, "id1"),
   callModule(form_server, "id2")
)

output$test <- 
   renderText(
      map(form_response, ~ .x()) %>%
         paste(collapse = ", ")
   )

# assessment <- callModule(form_server, "form", criteria$id)
# 
# data_output <- reactive({
#    criteria |>
#       rowwise() |> 
#       mutate(
#          status = assessment()[[id]],
#          status_label = case_when(
#             status == "not_assessed" ~ "Not assessed",
#             TRUE ~ names(options)[match(status, options)]
#          )
#       )
# })
# 
# metadata <- callModule(metadata_server, "metadata")
# 
# callModule(download_csv_server, "csv", data_output)
# 
# callModule(download_report_server, "report", data_output, levels, options, metadata)
```
